from Crash import *
from Resources.Scripts.UI.canvas import Canvas
from Resources.Scripts.slice import SlicedSprite

camera = GameObject(Vector2(0, 0), "camera")
camera.addComponent(Camera())

canvas_border = GameObject(Vector2(4.5, 0), "border")
border = SlicedSprite("Sprites/UI/border.png")
border.bounds = [24 for _ in range(4)]
border.scale = 1.25
canvas_border.addComponent(border)

canvas = GameObject(Vector2(4.5, 0), "canvas")
canvas.addComponent(Canvas([512, 512], 4))

toolbar = GameObject(Vector2(9.5, 0), "toolbar")
toolbar.addComponent(Sprite("Sprites/UI/Tools/toolbar.png"))

tools = ["pencil", "brush", "eraser", "bucket"]
for t in range(len(tools)):
    tool = tools[t]
    icon = GameObject(Vector2(9.5, (t * -1.25) + 3.25), tool)
    icon.addComponent(Sprite("Sprites/UI/Tools/" + tool + ".png", group=2))
    icon.addComponent(Button(Vector2(1, 1), canvas.getComponent(Canvas).change_tool, tool))

color_center = Vector2(10, -2.75+0.125+0.125/2)
color = GameObject(color_center, "colors")
color.addComponent(Sprite("Sprites/UI/Buttons/colors.png", group=2))

color_file = open(os.path.join(Resources.resourcePath, "resurrect-64.gpl"), "r")
colors = []
for line in color_file.readlines()[1:]:
    if line[0] == "#":
        continue

    new_color = [int(num) for num in line.split("\t")[0:3]] + [255]
    colors.append(new_color)

color_index = [15, 14, 17, 11, 18, 26, 31, 29, 47, 46, 51, 58, 9, 7, 2, 49]

for c in range(len(color_index)):
    cen = color_center + Vector2(((c % 4) * 0.5)-0.75, (-(c // 4) * 0.625) + 0.5 + 0.375 + 1/16)
    button = GameObject(cen, str(c))
    insert_color = colors[color_index[c]]
    if c == len(color_index) - 1:
        insert_color = [0, 0, 0, 255]
    button.addComponent(Button(Vector2(0.5, 0.5), canvas.getComponent(Canvas).change_color, insert_color))
    button.transform.parent = color.transform

# for user_addr in Game.client.users:
#     user = Game.client.users[user_addr]
#
#     canvas_object = GameObject(Vector2(-4, 0), user.name)
#     new_canvas = Canvas([256, 256], 4)
#     new_canvas.can_draw = False
#     canvas_object.addComponent(new_canvas)
#     user.canvas = new_canvas
